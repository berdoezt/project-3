consumes:
- application/json
definitions:
  model.MyError:
    properties:
      error:
        type: string
    type: object
  model.OrderCreateRequest:
    properties:
      price:
        type: integer
    type: object
  model.OrderCreateResponse:
    properties:
      id:
        type: string
      price:
        type: integer
      user_id:
        type: string
    type: object
  model.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.UserLoginResponse:
    properties:
      refresh_token:
        type: string
      token:
        type: string
    type: object
  model.UserRegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.UserRegisterResponse:
    properties:
      id:
        type: string
    type: object
host: localhost:8084
info:
  contact: {}
  description: This is a project 3 API.
  title: Project 3 API
  version: "1.0"
paths:
  /order:
    post:
      consumes:
      - application/json
      description: create order for a particular user
      parameters:
      - description: request is required
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.OrderCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.OrderCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.MyError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.MyError'
      security:
      - BearerAuth: []
      summary: create order
      tags:
      - order
  /user/login:
    post:
      consumes:
      - application/json
      description: login user using email and password
      parameters:
      - description: request is required
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.MyError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.MyError'
      summary: login user
      tags:
      - user
  /user/register:
    post:
      consumes:
      - application/json
      description: register a new user
      parameters:
      - description: request is required
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserRegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.MyError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.MyError'
      summary: register a new user
      tags:
      - user
produces:
- application/json
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
